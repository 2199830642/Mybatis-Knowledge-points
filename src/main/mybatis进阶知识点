
    1.mybatis中的连接池以及事务控制                原理部分了解，应用部分会用
            1.mybatis中连接池的使用及分析
                连接池：
                        我们在实际开发中都会使用连接池，因为可以减少我们获取连接所消耗的时间

                        连接池就是用来存储连接的容器
                        容器其实就是一个集合对象，该集合必须是线程安全的，不能让两个线程同时拿到同一个连接
                        该集合还必须实现队列的特性：先进先出

                mybatis中的连接池：
                        mybatis的连接池提供了三种方式的配置：
                            配置的位置：
                                        主配置文件：SqlMapConfig.xml中的dataSource标签，type属性表示采用何种连接池方式
                                                type属性的取值：
                                                    POOLED：采用传统的javax.sql.DataSource规范中的连接池
                                                    UNPOOLED:采用传统的获取连接的方式，虽然也实现了javax.sql.DataSource的接口
                                                                但是没有使用池的思想
                                                    JNDI:采用服务器提供的JNDI技术实现来获取DataSource对象，不同的服务器所能拿到
                                                                的DataSource是不一样的
                                                         注意：如果不是web或者maven的war工程，是不能使用的
                                                         我使用的tomcat服务器，采用的连接池是dbcp连接池


            2.mybatis中事务控制的分析
                什么是事务：如果一个包含多个步骤的业务操作被事务管理，那么他们要么同时成功，要么同时失败
                事务的四大特性
                        原子性：是不可分割的最小操作单位，要么同时成功，要么同时失败
                        隔离性：多个事务之间相互独立，但其实实际情况下，多个事务之间会产生影响
                        持久性：如果事务一旦被提交或者回滚，那么数据库中的表的数据会吃就行的更新
                        一致性：事务操作前后，数据总量不变

                不考虑隔离性会产生的三个问题
                        脏读：一个事务读取到另一个事务没有提交的数据
                        虚读(不可重复读)：在同一个事务中，两次读到的数据不一致
                        幻读：一个事务操作（DML）数据库表中的所有记录，另一个事务添加了一条数据，第一个事务查询不到自己的修改

                解决办法：四种隔离级别
                        读未提交（脏读，虚读，幻读）
                        读已提交 oracle默认（虚读，幻读）
                        可重复读 mysql默认（幻读）
                        串行化  （其实就是锁表）当一个事务在操作这个表的时候，其他事务是无法操作这个表的
                        可以解决所有问题

                mybatis中的事务：
                    它是通过sqlSession对象的commit方法和rollBack方法实现事务的提交和回滚


    2。mybatis中基于xml配置的动态SQL语句使用        会用即可
            1.mappers配置文件中的几个标签:
                    <if>
                    <where>
                    <foreach>
                    <sql>

    3.mybatis中的多表操作                         掌握应用
            1.一对多
            2.多对一
            3.一对一
            4.多对多

            mybatis中的多表查询
                实例：（一对多和一对一）
                    一个用户可以拥有多个账户
                    一个账户只能属于一个用户（多个账户可以属于同一个用户）
                步骤：
                    1.先建立两张表，一张用户表，一张账户表，需要使用外键在账户表中添加
                    2.建立两个实体类：用户实体类、账户实体类，让用户和账户的实体类能体现出一对多的关系
                    3.建立两个配置文件：用户配置文件、账户配置文件
                    4.实现配置：当我们查询用户时，可以同时得到用户下所包含的账户信息
                               当我们查询账户时，可以同时得到账户所属的用户信息

                实例：（多对多）
                    用户和角色
                        用户可以有多个角色
                        一个角色可以赋予多个用户
                步骤：
                    1.先建立两张表，一张用户表，一张角色表
                        让用户表和角色表具有多对多的关系,需要使用中间表，中间表中包含各自的主键，在中间表中是外键
                    2.建立两个实体类：用户实体类、角色实体类，让用户和角色的实体类能体现出多对多的关系
                        各自的实体类中包含对方一个集合引用
                    3.建立两个配置文件：用户配置文件、角色配置文件
                    4.实现配置：当我们查询用户时，可以同时得到用户下所包含的角色信息
                               当我们查询角色时，可以同时得到角色所包含的用户信息
