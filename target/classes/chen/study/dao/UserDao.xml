<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chen.study.dao.UserDao">
    <!--配置，查询结果的列名和实体类的属性名的对应关系-->
    <resultMap id="userAccountMap" type="user">
        <!--主键字段的对应-->
        <id property="id" column="id"></id>
        <!--非主键字段的对应-->
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
        <!--配置user对象中account集合的映射,一对多-->
        <collection property="accounts" ofType="account" select="chen.study.dao.AccountDao.findAccountByUid" column="id">
            <!--<id property="id" column="id"/>
            <result property="uid" column="uid"/>
            <result property="money" column="money"/>-->
        </collection>
    </resultMap>

    <resultMap id="userRoleMap" type="user">
        <!--主键字段的对应-->
        <id property="id" column="id"></id>
        <!--非主键字段的对应-->
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
        <!--配置user对象中role集合的映射,多对多-->
        <collection property="roles" ofType="role">
            <id property="roleId" column="rid"/>
            <result property="roleName" column="ROLE_NAME"/>
            <result property="roleDesc" column="ROLE_DESC"/>
        </collection>
    </resultMap>

    <!--了解的内容，抽取重复的sql语句-->
    <sql id="defaultUser">
        select * from user
    </sql>
    <!--配置查询所有用户及其对应的账户-->
    <select id="findAll" resultMap="userAccountMap">
        <!--
        重复的sql语句引用语法
        <include refid="defaultUser"></include>
        -->
        /*select * from user u left outer join account a on u.id=a.uid;*/
        select * from user ;
    </select>

    <!--配置查询所有用户及其对应的角色  多对多-->
    <select id="findAll1" resultMap="userRoleMap">
        select u.*,r.id as rid,r.role_Name,r.role_desc from user u
        left outer join user_role ur on u.id = ur.uid
        left outer join role r on r.id = ur.rid
    </select>

    <!--保存用户-->
    <insert id="saveUser" parameterType="user">
        <!-- 配置插入操作后，获取插入数据的id-->
        <selectKey keyProperty="id" keyColumn="id" resultType="Integer" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday) values(#{username},#{address},#{sex},#{birthday});
    </insert>
    <!--更新用户-->
    <update id="updateUser" parameterType="user">
        update  user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id};
    </update>
    <!--删除用户-->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id = #{uid};
    </delete>
    <!--查询一个用户-->
    <select id="findOne" parameterType="Integer" resultType="user">
        select * from user where id=#{uid};
    </select>
    <!--根据姓名模糊查询-->
    <select id="findByName" parameterType="String" resultType="user">
        select * from user where username like #{username}
    </select>
    <!--获取用户的总记录条数-->
    <select id="findTotal" resultType="Integer">
        select count(id) from user;
    </select>
    <!--根据QueryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="queryVo" resultType="user">
        select * from user where username like #{user.username}
    </select>
    <!--根据条件查询-->
    <select id="findByCondition" resultType="user" parameterType="user">
        select * from USER
        <where>
            <if test="username!=null">
               and username = #{username}
            </if>
            <if test="sex!=null">
               and sex=#{sex}
            </if>
        </where>
    </select>
    <!--根据queryVo中的id集合实现查询用户列表-->
    <select id="findUserInIds" resultType="user" parameterType="QueryVo">
        select * from user
        <where>
            <if test="ids!=null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
</mapper>